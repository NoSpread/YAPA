openapi: 3.0.1
info:
  title: YAPA API
  description: The perfect docs for the perfect api
  termsOfService: https://tos.nospread.xyz/yapa
  contact:
    name: API Support
    email: yapa@nospread.xyz
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1
servers:
- url: https://api.nospread.xyz/yapa/v1
- url: https://localhost:5000/
tags:
- name: user
  description: User operations
- name: weather
  description: Weather information
- name: route
  description: Route planning
- name: news
  description: Current news
- name: tools
  description: Helpful things
- name: freetime
  description: Things to use when bored
paths:
  /user/register:
    post:
      tags:
      - user
      summary: Add a new user to the db
      operationId: addUser
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - password
              - username
              properties:
                username:
                  type: string
                  description: Username of the new user
                password:
                  type: string
                  description: Password of the new user
                  format: password
        required: true
      responses:
        201:
          description: User created
          content: {}
        400:
          description: Missing username or password
          content: {}
        409:
          description: Failed to create user
          content: {}
        500:
          description: Database returned an error
          content: {}
  /user/login:
    post:
      tags:
      - user
      summary: Login as a user
      operationId: loginUser
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - password
              - username
              properties:
                username:
                  type: string
                  description: Username of the user
                password:
                  type: string
                  description: Password of the user
                  format: password
        required: true
      responses:
        200:
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        400:
          description: Missing username or password
          content: {}
        404:
          description: User not found
          content: {}
  /user/logout:
    post:
      tags:
      - user
      summary: Logout as a user
      operationId: logoutUser
      responses:
        200:
          description: Successful logout
          content: {}
        401:
          description: Cookie or key missing
          content: {}
        500:
          description: Error while confirming the key
          content: {}
      security:
      - api_auth: []
  /weather/now:
    post:
      tags:
      - weather
      summary: Get the current weather for your location
      operationId: weatherNow
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - loc
              properties:
                loc:
                  type: string
                  description: The location you are requesting the weather from
        required: true
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeatherNow'
        400:
          description: Missing parameter loc
          content: {}
        503:
          description: Error while confirming the key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
      security:
      - api_auth: []
  /weather/forecast:
    post:
      tags:
      - weather
      summary: Get the future weather for your location
      operationId: weatherForcast
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - days
              - loc
              properties:
                loc:
                  type: string
                  description: The location you are requesting the weather from
                days:
                  type: integer
                  description: The location you are requesting the weather from
                  format: int64
        required: true
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeatherForecast'
        400:
          description: Missing parameter loc and/or days
          content: {}
        503:
          description: Error while confirming the key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
      security:
      - api_auth: []
  /route/driving:
    post:
      tags:
      - route
      summary: Get route informations between two waypoints while driving
      operationId: routeDriving
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - end
              - start
              properties:
                start:
                  type: string
                  description: The start waypoint
                end:
                  type: string
                  description: The end waypoint
        required: true
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        400:
          description: Missing parameter start and/or end
          content: {}
        503:
          description: Error while confirming the key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
      security:
      - api_auth: []
  /route/walking:
    post:
      tags:
      - route
      summary: Get route informations between two waypoints while walking
      operationId: routeWalking
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - end
              - start
              properties:
                start:
                  type: string
                  description: The start waypoint
                end:
                  type: string
                  description: The end waypoint
        required: true
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        400:
          description: Missing parameter start and/or end
          content: {}
        503:
          description: Error while confirming the key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
      security:
      - api_auth: []
  /route/transit:
    post:
      tags:
      - route
      summary: Get route informations between two waypoints while using transit
      operationId: routeTransit
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - end
              - start
              - time
              - timetype
              properties:
                start:
                  type: string
                  description: The start waypoint
                end:
                  type: string
                  description: The end waypoint
                timetype:
                  type: array
                  description: What kind of time you are looking for
                  items:
                    type: string
                    default: departure
                    enum:
                    - arrival
                    - departure
                    - lastavailable
                time:
                  type: string
                  description: The time your searching a transit
        required: true
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        400:
          description: Missing parameter
          content: {}
        503:
          description: Error while confirming the key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
      security:
      - api_auth: []
  /news:
    post:
      tags:
      - news
      summary: Get the current news about a topic
      operationId: news
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - topic
              properties:
                topic:
                  type: string
                  description: The topic you want to have news about
        required: true
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
        400:
          description: Missing parameter topic
          content: {}
        503:
          description: Error while confirming the key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
      security:
      - api_auth: []
components:
  schemas:
    LoginResponse:
      type: object
      properties:
        username:
          type: string
        id:
          type: integer
          format: int64
        api:
          type: string
    RequestError:
      type: object
      properties:
        type:
          type: string
        e:
          type: string
    WeatherNow:
      type: object
      properties:
        location:
          type: object
          properties:
            name:
              type: string
            region:
              type: string
            country:
              type: string
        weather:
          type: object
          properties:
            update:
              type: string
              format: date-time
            temp:
              type: number
              format: float
            cond:
              type: string
            wind:
              type: object
              properties:
                dir:
                  type: string
                speed:
                  type: number
                  format: float
    WeatherForecast:
      type: object
      properties:
        location:
          type: object
          properties:
            name:
              type: string
            region:
              type: string
            country:
              type: string
        weather:
          type: object
          properties:
            update:
              type: string
              format: date-time
            temp:
              type: number
              format: float
            cond:
              type: string
            wind:
              type: object
              properties:
                dir:
                  type: string
                speed:
                  type: number
                  format: float
        forecast:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date-time
              avg_temp:
                type: number
                format: float
              cond:
                type: string
              wind:
                type: number
                format: float
              snow:
                type: integer
                format: int64
              rain:
                type: integer
                format: int64
    Route:
      type: object
      properties:
        travelDuration:
          type: integer
          format: int64
        travelDurationTraffic:
          type: integer
          format: int64
        travelDistance:
          type: number
          format: float
    News:
      type: object
      properties:
        status:
          type: string
        totalResults:
          type: integer
          format: int64
        articles:
          type: array
          items:
            type: object
            properties:
              source:
                type: object
                properties:
                  id:
                    type: string
                    nullable: true
              author:
                type: string
                nullable: true
              title:
                type: string
              description:
                type: string
              url:
                type: string
              urlToImage:
                type: string
              publishedAt:
                type: string
                format: date-time
              content:
                type: string
                nullable: true
  securitySchemes:
    api_auth:
      type: apiKey
      name: X-API-KEY
      in: header
